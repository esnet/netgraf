[control]
129.114.109.96 ansible_connection=local
#159.65.60.19 ansible_connection=local
#control-node ansible_host=143.198.156.176 ansible_user=root
#control-node ansible_connection=local

#[servers]
#server_1 ansible_host=67.205.158.239 ansible_user=root

[linux:vars]
ansible_become=true
ansible_user='cc'
ansible_become_method='sudo'
ansible_become_user='root'

[centos]
#129.114.109.118 #target-6
#159.65.55.28 #target-5

[ubuntu]
#159.65.60.26  #target-1
#138.68.173.232
#138.68.191.108
#143.198.156.176

129.114.108.217 #target-2
129.114.108.152 #target-3
129.114.109.219 #target-4
#129.114.109.118 #target-7

[linux:children]
centos
ubuntu


[all:vars]
ansible_python_interpreter=/usr/bin/python3
ansible_user=root
#control-node ansible_host=138.68.10.107 ansible_user=root
#server_1 ansible_host=67.205.158.239 ansible_user=root

# Ex 1: Ungrouped hosts, specify before any group headers.

## green.example.com
## blue.example.com
## 192.168.100.1
## 192.168.100.10

# Ex 2: A collection of hosts belonging to the 'webservers' group

## [webservers]
## alpha.example.org
## beta.example.org
## 192.168.1.100
## 192.168.1.110

# If you have multiple hosts following a pattern you can specify
# them like this:

## www[001:006].example.com

# Ex 3: A collection of database servers in the 'dbservers' group

## [dbservers]
##
## db01.intranet.mydomain.net
## db02.intranet.mydomain.net
## 10.25.1.56
## 10.25.1.57

# Here's another example of host ranges, this time there are no
# leading 0s:

## db-[99:101]-node.example.com
